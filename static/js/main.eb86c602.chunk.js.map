{"version":3,"sources":["myFirebase.js","components/Today.js","components/MyCalendar.js","components/Todo.js","components/TodoList.js","components/WorkTimeForm.js","pages/Home.jsx","pages/Login.jsx","pages/NotFound.jsx","pages/Profile.jsx","components/Navigator.js","components/AppRouter.js","components/Loading.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","Today","userData","date","useState","workTime","setWorkTime","dateFormat","require","dateString","todayString","Date","useEffect","docRef","doc","uid","todayDocRef","fetchData","docReference","a","getDoc","docSnap","exists","data","console","log","q","query","unsubscribe","onSnapshot","snapshot","MyCalendar","SetDate","value","onChange","calendarType","Todo","text","done","id","type","TodoList","todo","setTodo","todoList","setTodoList","updateDoc","setDoc","updateData","displayName","onSubmit","event","preventDefault","timeNow","getTime","createdAt","modifiedAt","target","map","todoEl","index","WorkTimeForm","isWorking","setIsWorking","startTime","setStartTime","onClick","Home","Login","provider","GoogleAuthProvider","signInWithRedirect","NotFound","Profile","history","useHistory","src","photoURL","alt","email","signOut","push","Navigator","to","AppRouter","currentUser","exact","path","Loading","App","isLoading","setIsLoading","setUserData","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb86c602.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const db = getFirestore();\n","import { doc, getDoc, onSnapshot, query } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../myFirebase\";\n\nconst Today = ({ userData, date }) => {\n  const [workTime, setWorkTime] = useState(0);\n  const dateFormat = require(\"dateformat\");\n  const dateString = dateFormat(date, \"yyyy-mm-dd\");\n  const todayString = dateFormat(new Date(), \"yyyy-mm-dd\");\n\n  useEffect(() => {\n    // when this component is mounted,\n    // fetch data of this date.\n    const docRef = doc(db, userData.uid, dateString);\n    const todayDocRef = doc(db, userData.uid, todayString);\n    const fetchData = async (docReference) => {\n      try {\n        const docSnap = await getDoc(docReference);\n        if (docSnap.exists()) {\n          setWorkTime(docSnap.data().workTime);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData(docRef);\n\n    // listener\n    const q = query(todayDocRef);\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      if (dateString === todayString) fetchData(todayDocRef);\n    });\n\n    return () => {\n      setWorkTime(0);\n      unsubscribe();\n    };\n  }, [userData.uid, dateString, todayString]);\n\n  return (\n    <>\n      <h4>{dateString} Log!</h4>\n      <span>{workTime}</span>\n    </>\n  );\n};\n\nexport default Today;\n","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Today from \"./Today\";\n\nconst MyCalendar = ({ userData }) => {\n  const [date, SetDate] = useState(new Date());\n  return (\n    <>\n      <Calendar value={date} onChange={SetDate} calendarType=\"US\" />\n      <Today userData={userData} date={date} />\n    </>\n  );\n};\n\nexport default MyCalendar;\n","import React from \"react\";\n\nconst Todo = ({ text, done, id }) => {\n  return (\n    <li id={id}>\n      <span id={id}>{text}</span>\n      <input type=\"button\" id={id} value={done ? \"undo\" : \"done\"} />\n      <input type=\"button\" id={id} value=\"del\" />\n    </li>\n  );\n};\n\nexport default Todo;\n","import { doc, getDoc, setDoc, updateDoc } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../myFirebase\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ userData }) => {\n  const [todo, setTodo] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n\n  useEffect(() => {\n    // component did mount\n    const docRef = doc(db, userData.uid, \"todo-list\");\n    const fetchData = async () => {\n      try {\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          setTodoList(docSnap.data().todoList);\n        } else {\n          setTodoList([]);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n\n    return () => {\n      setTodo(\"\");\n      setTodoList([]);\n    };\n  }, [userData.uid]);\n\n  useEffect(() => {\n    // component did update\n    const docRef = doc(db, userData.uid, \"todo-list\");\n    const updateData = async () => {\n      try {\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          updateDoc(docRef, {\n            todoList,\n          });\n        } else {\n          setDoc(docRef, {\n            todoList,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    updateData();\n  }, [userData.uid, todoList]);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTodo(value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const timeNow = new Date().getTime();\n    setTodoList([\n      ...todoList,\n      { text: todo, done: false, createdAt: timeNow, modifiedAt: timeNow },\n    ]);\n\n    setTodo(\"\");\n  };\n\n  return (\n    <>\n      <h3>{userData.displayName}의 To-do List.</h3>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={todo} onChange={onChange} />\n        <input type=\"submit\" value=\"add\" />\n      </form>\n      <ul>\n        {todoList.map((todoEl, index) => (\n          <div key={index}>\n            <Todo text={todoEl.text} done={todoEl.done} id={index} />\n          </div>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default TodoList;\n","import { doc, getDoc, setDoc, updateDoc } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../myFirebase\";\n\nconst WorkTimeForm = ({ userData }) => {\n  const dateFormat = require(\"dateformat\");\n  const todayString = dateFormat(new Date(), \"yyyy-mm-dd\");\n  // e.g. 2021-09-01\n  const [workTime, setWorkTime] = useState(0);\n  // workTime: work time in ms\n  const [isWorking, setIsWorking] = useState(false);\n  const [startTime, setStartTime] = useState(0);\n\n  useEffect(() => {\n    // component did mount\n    const fetchData = async () => {\n      try {\n        const docRef = doc(db, userData.uid, todayString);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setWorkTime(data.workTime);\n          setIsWorking(data.isWorking);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [todayString, userData.uid]);\n\n  useEffect(() => {\n    // component did update\n    const updateData = async () => {\n      try {\n        const docRef = doc(db, userData.uid, todayString);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          updateDoc(docRef, {\n            workTime,\n            isWorking,\n          });\n        } else {\n          setDoc(docRef, {\n            workTime,\n            isWorking,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    updateData();\n  }, [todayString, userData.uid, workTime, isWorking]);\n\n  const onClick = () => {\n    if (isWorking) {\n      setWorkTime(workTime + new Date().getTime() - startTime);\n    } else {\n      setStartTime(new Date().getTime());\n    }\n    setIsWorking(!isWorking);\n  };\n\n  return (\n    <>\n      <span>Today's worktime: {workTime} </span>\n      <button onClick={onClick}>{isWorking ? \"finish\" : \"start\"}</button>\n    </>\n  );\n};\n\nexport default WorkTimeForm;\n","import React from \"react\";\nimport MyCalendar from \"../components/MyCalendar\";\nimport TodoList from \"../components/TodoList\";\nimport WorkTimeForm from \"../components/WorkTimeForm\";\n\nconst Home = ({ userData }) => {\n  return (\n    <div>\n      <h2>환영합니다, {userData.displayName}님!</h2>\n      <WorkTimeForm userData={userData} />\n      <TodoList userData={userData} />\n      <MyCalendar userData={userData} />\n    </div>\n  );\n};\n\nexport default Home;\n","import {\n  // getRedirectResult,\n  GoogleAuthProvider,\n  signInWithRedirect,\n} from \"@firebase/auth\";\nimport React from \"react\";\nimport { auth } from \"../myFirebase\";\n\nconst Login = () => {\n  const onGoogleLoginClick = (event) => {\n    event.preventDefault();\n    const provider = new GoogleAuthProvider();\n    signInWithRedirect(auth, provider);\n    // getRedirectResult(auth).then((result) => {\n    //   console.log(auth.currentUser);\n    // });\n  };\n  return (\n    <>\n      <h2>Log in</h2>\n      <button onClick={onGoogleLoginClick}>Continue with Google</button>\n    </>\n  );\n};\n\nexport default Login;\n","export default function NotFound() {\n  return (\n    <div>\n      <h2>Oops! Page Not Found!</h2>\n    </div>\n  );\n}\n","import { useHistory } from \"react-router\";\nimport { auth } from \"../myFirebase\";\n\nconst Profile = ({ userData }) => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    auth.signOut();\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <h2>Profile</h2>\n      <h2>{userData.displayName}</h2>\n      <img src={userData.photoURL} alt=\"\" />\n      <span>{userData.email}</span>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { auth } from \"../myFirebase\";\n\nconst Navigator = () => {\n  return (\n    <>\n      <Link to=\"/\">\n        <h4>Home</h4>\n      </Link>\n      <Link to=\"/profile\">\n        <h4>Profile</h4>\n      </Link>\n    </>\n  );\n};\n\nexport default Navigator;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { auth } from \"../myFirebase\";\nimport Home from \"../pages/Home\";\nimport Login from \"../pages/Login\";\nimport NotFound from \"../pages/NotFound\";\nimport Profile from \"../pages/Profile\";\nimport Navigator from \"./Navigator\";\n\nconst AppRouter = ({ userData }) => {\n  return (\n    <BrowserRouter>\n      {auth.currentUser && <Navigator />}\n      <Switch>\n        {auth.currentUser ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userData={userData} />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile userData={userData} />\n            </Route>\n            <Redirect path=\"/login\" to=\"/\" />\n          </>\n        ) : (\n          <>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n            <Redirect path=\"*\" to=\"/\" />\n          </>\n        )}\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\n\nconst Loading = () => {\n  return <h3>Loading...</h3>;\n};\n\nexport default Loading;\n","import { onAuthStateChanged } from \"@firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth } from \"../myFirebase\";\nimport AppRouter from \"./AppRouter\";\nimport Loading from \"./Loading\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserData(user);\n      } else {\n        setUserData(null);\n      }\n      setIsLoading(false);\n    });\n  }, []);\n  return <>{isLoading ? <Loading /> : <AppRouter userData={userData} />}</>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}