{"version":3,"sources":["myFirebase.js","components/Today.js","components/MyCalendar.js","components/Todo.js","components/TodoList.js","components/WorkTimeForm.js","pages/Home.jsx","pages/Login.jsx","pages/NotFound.jsx","pages/Profile.jsx","components/Navigator.js","components/AppRouter.js","components/Loading.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","Today","userData","date","useState","workTime","setWorkTime","dateFormat","require","dateString","todayString","Date","useEffect","docRef","doc","uid","todayDocRef","fetchData","docReference","a","getDoc","docSnap","exists","data","console","log","q","query","unsubscribe","onSnapshot","snapshot","MyCalendar","SetDate","value","onChange","calendarType","Todo","text","id","done","TodoList","todo","setTodo","todoList","setTodoList","updateDoc","setDoc","updateData","onClick","event","target","name","newList","splice","displayName","onSubmit","preventDefault","timeNow","getTime","createdAt","modifiedAt","type","map","todoEl","index","WorkTimeForm","isWorking","setIsWorking","startTime","setStartTime","Home","Login","className","provider","GoogleAuthProvider","signInWithRedirect","icon","faGoogle","size","color","NotFound","Profile","history","useHistory","src","photoURL","alt","email","signOut","push","Navigator","to","faUserAlt","AppRouter","currentUser","exact","path","Loading","width","App","isLoading","setIsLoading","undefined","setUserData","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9bb9555.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const db = getFirestore();\n","import { doc, getDoc, onSnapshot, query } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../myFirebase\";\n\nconst Today = ({ userData, date }) => {\n  const [workTime, setWorkTime] = useState(0);\n  const dateFormat = require(\"dateformat\");\n  const dateString = dateFormat(date, \"yyyy-mm-dd\");\n  const todayString = dateFormat(new Date(), \"yyyy-mm-dd\");\n\n  useEffect(() => {\n    // when this component is mounted,\n    // fetch data of this date.\n    const docRef = doc(db, userData.uid, dateString);\n    const todayDocRef = doc(db, userData.uid, todayString);\n    const fetchData = async (docReference) => {\n      try {\n        const docSnap = await getDoc(docReference);\n        if (docSnap.exists()) {\n          setWorkTime(docSnap.data().workTime);\n        }\n      } catch (error) {\n        console.log(\"from Today.js\");\n        console.log(error);\n      }\n    };\n    fetchData(docRef);\n\n    // listener\n    const q = query(todayDocRef);\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      if (dateString === todayString) fetchData(todayDocRef);\n    });\n\n    return () => {\n      setWorkTime(0);\n      unsubscribe();\n    };\n  }, [userData.uid, dateString, todayString]);\n\n  return (\n    <>\n      <h4>{dateString} Log!</h4>\n      <span>{workTime}</span>\n    </>\n  );\n};\n\nexport default Today;\n","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Today from \"./Today\";\n\nconst MyCalendar = ({ userData }) => {\n  const [date, SetDate] = useState(new Date());\n  return (\n    <>\n      <Calendar value={date} onChange={SetDate} calendarType=\"US\" />\n      <Today userData={userData} date={date} />\n    </>\n  );\n};\n\nexport default MyCalendar;\n","import React from \"react\";\n\nconst Todo = ({ text, done, id }) => {\n  return (\n    <li id={id}>\n      <span id={id}>{text}</span>\n    </li>\n  );\n};\n\nexport default Todo;\n","import {\n  doc,\n  getDoc,\n  onSnapshot,\n  setDoc,\n  updateDoc,\n} from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../myFirebase\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ userData }) => {\n  const [todo, setTodo] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n\n  useEffect(() => {\n    // component did mount\n    const docRef = doc(db, userData.uid, \"todo-list\");\n    const fetchData = async (docReference) => {\n      try {\n        const docSnap = await getDoc(docReference);\n        if (docSnap.exists()) {\n          setTodoList(docSnap.data().todoList);\n        } else {\n          setTodoList([]);\n        }\n      } catch (error) {\n        console.log(\"from TodoList.js\");\n        console.log(error);\n      }\n    };\n    fetchData(docRef);\n\n    const unsubscribe = onSnapshot(docRef, (snapshot) => {\n      fetchData(docRef);\n    });\n\n    return () => {\n      setTodo(\"\");\n      setTodoList([]);\n      unsubscribe();\n    };\n  }, [userData.uid]);\n\n  useEffect(() => {\n    // component did update\n    const docRef = doc(db, userData.uid, \"todo-list\");\n    const updateData = async () => {\n      try {\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          updateDoc(docRef, {\n            todoList,\n          });\n        } else {\n          setDoc(docRef, {\n            todoList,\n          });\n        }\n      } catch (error) {\n        console.log(\"from TodoList.js\");\n        console.log(error);\n      }\n    };\n    updateData();\n  }, [userData.uid, todoList]);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTodo(value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const timeNow = new Date().getTime();\n    setTodoList([\n      ...todoList,\n      { text: todo, done: false, createdAt: timeNow, modifiedAt: timeNow },\n    ]);\n\n    setTodo(\"\");\n  };\n\n  const onClick = (event) => {\n    const {\n      target: { name, id },\n    } = event;\n    const newList = [...todoList];\n    if (name === \"done\") {\n      newList[id].done = !newList[id].done;\n    } else if (name === \"delete\") {\n      newList.splice(id, 1);\n    }\n    setTodoList(newList);\n  };\n\n  return (\n    <>\n      <h3>{userData.displayName}의 To-do List.</h3>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={todo} onChange={onChange} />\n        <input type=\"submit\" value=\"add\" />\n      </form>\n      <ul>\n        {todoList.map((todoEl, index) => (\n          <div key={index}>\n            <Todo text={todoEl.text} done={todoEl.done} id={index} />\n            <input\n              type=\"button\"\n              name=\"done\"\n              id={index}\n              onClick={onClick}\n              value={todoEl.done ? \"undo\" : \"done\"}\n            />\n            <input\n              type=\"button\"\n              id={index}\n              name=\"delete\"\n              value=\"del\"\n              onClick={onClick}\n            />\n          </div>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default TodoList;\n","import { doc, getDoc, setDoc, updateDoc } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../myFirebase\";\n\nconst WorkTimeForm = ({ userData }) => {\n  const dateFormat = require(\"dateformat\");\n  const todayString = dateFormat(new Date(), \"yyyy-mm-dd\");\n  // e.g. 2021-09-01\n  const [workTime, setWorkTime] = useState(0);\n  // workTime: work time in ms\n  const [isWorking, setIsWorking] = useState(false);\n  const [startTime, setStartTime] = useState(0);\n\n  useEffect(() => {\n    // component did mount\n    const fetchData = async () => {\n      try {\n        const docRef = doc(db, userData.uid, todayString);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setWorkTime(data.workTime);\n          setIsWorking(data.isWorking);\n        }\n      } catch (error) {\n        console.log(\"from WorkTimeForm.js\");\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [todayString, userData.uid]);\n\n  useEffect(() => {\n    // component did update\n    const updateData = async () => {\n      try {\n        const docRef = doc(db, userData.uid, todayString);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          updateDoc(docRef, {\n            workTime,\n            isWorking,\n          });\n        } else {\n          setDoc(docRef, {\n            workTime,\n            isWorking,\n          });\n        }\n      } catch (error) {\n        console.log(\"from WorkTimeForm.js\");\n        console.log(error);\n      }\n    };\n    updateData();\n  }, [todayString, userData.uid, workTime, isWorking]);\n\n  const onClick = () => {\n    if (isWorking) {\n      setWorkTime(workTime + new Date().getTime() - startTime);\n    } else {\n      setStartTime(new Date().getTime());\n    }\n    setIsWorking(!isWorking);\n  };\n\n  return (\n    <>\n      <span>Today's worktime: {workTime} </span>\n      <button onClick={onClick}>{isWorking ? \"finish\" : \"start\"}</button>\n    </>\n  );\n};\n\nexport default WorkTimeForm;\n","import React from \"react\";\nimport MyCalendar from \"../components/MyCalendar\";\nimport TodoList from \"../components/TodoList\";\nimport WorkTimeForm from \"../components/WorkTimeForm\";\n\nconst Home = ({ userData }) => {\n  return (\n    <div>\n      <h2>환영합니다, {userData.displayName}님!</h2>\n      <WorkTimeForm userData={userData} />\n      <TodoList userData={userData} />\n      <MyCalendar userData={userData} />\n    </div>\n  );\n};\n\nexport default Home;\n","import {\n  // getRedirectResult,\n  GoogleAuthProvider,\n  signInWithRedirect,\n} from \"@firebase/auth\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { auth } from \"../myFirebase\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const onGoogleLoginClick = (event) => {\n    event.preventDefault();\n    const provider = new GoogleAuthProvider();\n    signInWithRedirect(auth, provider);\n    // getRedirectResult(auth).then((result) => {\n    //   console.log(auth.currentUser);\n    // });\n  };\n  return (\n    <div className=\"login--container\">\n      <div>\n        <h2>Sign in</h2>\n        <button onClick={onGoogleLoginClick}>\n          Continue with Google{\" \"}\n          <FontAwesomeIcon icon={faGoogle} size=\"2x\" color=\"#aaa\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","export default function NotFound() {\n  return (\n    <div>\n      <h2>Oops! Page Not Found!</h2>\n    </div>\n  );\n}\n","import { useHistory } from \"react-router\";\nimport { auth } from \"../myFirebase\";\n\nconst Profile = ({ userData }) => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    auth.signOut();\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <h2>Profile</h2>\n      <h2>{userData.displayName}</h2>\n      <img src={userData.photoURL} alt=\"\" />\n      <span>{userData.email}</span>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigator.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigator = ({ userData }) => {\n  return (\n    <div className=\"nav--container\">\n      <Link className=\"nav--menu nav--home\" to=\"/\">\n        {/* <h4>Home</h4> */}\n        {/* <img src=\"../../images/logo.png\" alt=\"AIM Korea Logo\" /> */}\n      </Link>\n      <Link className=\"nav--menu nav--profile\" to=\"/profile\">\n        {/* <h4>Profile</h4> */}\n        {userData ? (\n          <img src={userData.photoURL} alt=\"profile\" />\n        ) : (\n          <FontAwesomeIcon icon={faUserAlt} size=\"2x\" />\n        )}\n      </Link>\n    </div>\n  );\n};\n\nexport default Navigator;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { auth } from \"../myFirebase\";\nimport Home from \"../pages/Home\";\nimport Login from \"../pages/Login\";\nimport NotFound from \"../pages/NotFound\";\nimport Profile from \"../pages/Profile\";\nimport Navigator from \"./Navigator\";\nimport \"./AppRouter.css\";\n\nconst AppRouter = ({ userData }) => {\n  return (\n    <BrowserRouter>\n      <Navigator userData={userData} />\n      {/* {auth.currentUser && <Navigator />} */}\n      <div className=\"router--container\">\n        <Switch>\n          {auth.currentUser ? (\n            <>\n              <Route exact path=\"/\">\n                <Home userData={userData} />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile userData={userData} />\n              </Route>\n              <Redirect path=\"/login\" to=\"/\" />\n            </>\n          ) : (\n            <>\n              <Route path=\"/\">\n                <Login />\n              </Route>\n              <Redirect path=\"*\" to=\"/\" />\n            </>\n          )}\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <Loader className=\"loader-spinner\" type=\"Oval\" width={50} color=\"#6e7eb1\" />\n  );\n};\n\nexport default Loading;\n","import { onAuthStateChanged } from \"@firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth } from \"../myFirebase\";\nimport AppRouter from \"./AppRouter\";\nimport Loading from \"./Loading\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userData, setUserData] = useState(undefined);\n  useEffect(() => {\n    // component did mount\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserData(user);\n      } else {\n        setUserData(undefined);\n      }\n      setIsLoading(false);\n    });\n  }, []);\n  return (\n    <div className=\"app-container\">\n      {isLoading ? <Loading /> : <AppRouter userData={userData} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}